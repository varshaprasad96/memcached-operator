# apiVersion: v1
# kind: Service
# metadata:
#   name: memcached-operator-webhook-service
#   namespace: memcached-operator-system
# spec:
#   ports:
#   - port: 443
#     targetPort: 9443
#   selector:
#     control-plane: controller-manager
# ---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: memcached-operator-system
---
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: memcached-operator-serving-cert
  namespace: memcached-operator-system
spec:
  dnsNames:
  - memcached-operator-webhook-service.memcached-operator-system.svc
  - memcached-operator-webhook-service.memcached-operator-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: memcached-operator-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  name: memcached-operator-selfsigned-issuer
  namespace: memcached-operator-system
spec:
  selfSigned: {}
# ---
# apiVersion: admissionregistration.k8s.io/v1beta1
# kind: ValidatingWebhookConfiguration
# metadata:
#   annotations:
#     cert-manager.io/inject-ca-from: memcached-operator-system/memcached-operator-serving-cert
#   creationTimestamp: null
#   name: memcached-operator-validating-webhook-configuration
# webhooks:
# - clientConfig:
#     caBundle: Cg==
#     service:
#       name: memcached-operator-webhook-service
#       namespace: memcached-operator-system
#       path: /validate-cache-example-com-v1alpha1-memcached
#   failurePolicy: Fail
#   name: vmemcached.kb.io
#   rules:
#   - apiGroups:
#     - cache.example.com
#     apiVersions:
#     - v1alpha1
#     operations:
#     - CREATE
#     - UPDATE
#     resources:
#     - memcacheds
# ---
# apiVersion: admissionregistration.k8s.io/v1beta1
# kind: MutatingWebhookConfiguration
# metadata:
#   annotations:
#     cert-manager.io/inject-ca-from: memcached-operator-system/memcached-operator-serving-cert
#   creationTimestamp: null
#   name: memcached-operator-mutating-webhook-configuration
# webhooks:
# - clientConfig:
#     caBundle: Cg==
#     service:
#       name: memcached-operator-webhook-service
#       namespace: memcached-operator-system
#       path: /mutate-cache-example-com-v1alpha1-memcached
#   failurePolicy: Fail
#   name: mmemcached.kb.io
#   rules:
#   - apiGroups:
#     - cache.example.com
#     apiVersions:
#     - v1alpha1
#     operations:
#     - CREATE
#     - UPDATE
#     resources:
#     - memcacheds
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   labels:
#     control-plane: controller-manager
#   name: memcached-operator-controller-manager
#   namespace: memcached-operator-system
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       control-plane: controller-manager
#   template:
#     metadata:
#       labels:
#         control-plane: controller-manager
#     spec:
#       containers:
#       - args:
#         - --secure-listen-address=0.0.0.0:8443
#         - --upstream=http://127.0.0.1:8080/
#         - --logtostderr=true
#         - --v=10
#         image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
#         name: kube-rbac-proxy
#         ports:
#         - containerPort: 8443
#           name: https
#       - args:
#         - --metrics-addr=127.0.0.1:8080
#         - --enable-leader-election
#         command:
#         - /manager
#         image: quay.io/vnarsing/webhook:v22
#         name: manager
#         ports:
#         - containerPort: 9443
#           name: webhook-server
#           protocol: TCP
#         resources:
#           limits:
#             cpu: 100m
#             memory: 30Mi
#           requests:
#             cpu: 100m
#             memory: 20Mi
#         volumeMounts:
#         - mountPath: /tmp/k8s-webhook-server/serving-certs
#           name: cert
#           readOnly: true
#       terminationGracePeriodSeconds: 10
#       volumes:
#       - name: cert
#         secret:
#           defaultMode: 420
#           secretName: webhook-server-cert
